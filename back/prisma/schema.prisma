// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email                   String   @unique
  user                    String   @unique
  nickname 				  String? @unique
  hash                    String?
  userIntra               Boolean?
  jwt_token               String?
  authentication2fa       Boolean?
  authentication2faSecret String?
  profileImage            String?

  status UserStatus?

  followedBy Friendship[] @relation("followedBy")
  following  Friendship[] @relation("following")

  UserGameHistory UserGameHistory[]
}

model Friendship {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  followedBy   User     @relation("followedBy", fields: [followedById], references: [id])
  followedById Int
  following    User     @relation("following", fields: [followingId], references: [id])
  followingId  Int

  @@unique([followingId, followedById])
}

enum UserStatus {
  ONLINE
  OFFLINE
  IN_GAME
  IN_QUEUE
}

model UserGameHistory {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Referência ao usuário 
  user   User @relation(fields: [userId], references: [id])
  userId Int

  // Informações sobre o jogo
  gameId  Int // Coluna IDJogo
  date    DateTime // Coluna DataJogo
  outcome Boolean // Coluna se ganhou ou perdeu esse jogo
  //opponent   User     @relation("opponent")

  @@index([userId, gameId], name: "unique_user_game")
}
